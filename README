1.1. O programie

    ttyclock - prosty program wy¶wietlaj±cy na konsoli textowej systemu unixowego aktualny czas
	   w zdefiniowanym przez u¿ytkownika jêzyku. Dodatkowo program posiada mo¿liwo¶ci
	   odliczania czasu do konkretnego momentu w przysz³o¶ci oraz odliczania sekund
	   od momentu uruchomienia. Program przyjmuje parametry z lini poleceñ a wyj¶cie
	   wypiszuje na standardowe wyj¶cie (nie ma opcji przekierowania do pliku, nalezy 
	   u¿yæ przekierowania systemowego)
	   
1.2. Program ma budowê modularn± i jest podzielony na nastêpuj±ce modu³y:
	   
   * main
   * mod_commandline
   * mod_output
   * mod_curses
   * mod_time
   * mod_colors
   * languages
   * lang_digital
   * lang_bcd
   * lang_binary	   

1.3. Opis modu³ów

    1.3.1: main - g³owny modu³ programu. Zajmuje siê podstawowymi operacjami koordynacyjnymi
		wzglêdem reszty modu³ów. 
	
	1.3.1.1 funkcja main - g³ówna funkcja programu. Odpowiada za wywo³ywanie
		wszystkich innych funkcji, które s± wymagane przy dzia³aniu zegara
		
	1.3.1.2 funkcja TC_print_help - funkcja wy¶wietlaj±ca pomoc po wywo³aniu
		programu z flag± --help
		
	1.3.1.3 funkcja TC_abnormal_termination - funkcja wy¶wietlaj±ca dodatkowe
		informacje debaguj±ce w przypadku nieoczekiwanego (i niepoprawnego)
		zakoñczenia siê programu
		
    1.3.2: mod_commandline - zajmuje siê przetwarzaniem i parsowaniem lini poleceñ
		przekazanych do programu.
	
	1.3.2.1 funkcja TC_check_parameters - funckcja pobiera argc i argv i sprawdza
		jakie parametry zosta³y przekazane programowi modyfikuj±c odpowiednie
		flagi i zmienne globalne programu wzgledem potrzeb
		Funkcja zawiera sprawdzanie poprawno¶ci wprowadzanych flag oraz argumentów
		przekazanych do programu. W przypadku podania b³êdnych danych program
		koñczy siê z komunikatem o b³edzie zdefiniowanym w punkcie 1.3.1.3
		
	1.3.2.2 TC_found_flag_help - funkcja wywo³ywana gdy w lini poleceñ zostanie 
		znaleziona flaga --help. Wywo³uje 1.3.1.2 a nastêpnie koñczy program
	
	1.3.2.3 TC_found_flag_stoper - funcja wywo³ywana gdy znaleziona zostanie flaga
		--stoper. Uaktywania ona odliczanie sekund od momentu zainicjowania 
		programu
	
	1.3.2.4 TC_found_flag_timer - funcka wywo³ywana gdy znaleziona zostanie flaga 
		--timer. Opcjonalnie mo¿e teraz byæ u¿yta flaga --run lub --countdown.
		Domy¶lnie zegar odliczaæ bêdize do najbli¿szej pe³nej godzinie 
		(bo o tej porze koñczy siê wyk³ad)
	
	1.3.2.5 TC_found_flag_counter - jej zastoso0wanie jest poprawne tylko z flag±
		--timer. Ustawia ona czas DO kiedy timer bêdize odlicza³. 
	
	1.3.2.6 TC_found_flag_run - jako argument pobiera ¶cie¿kê do plku wykonyywalnego 
		który bêdzie wywo³any przez shella w momencie 
	
	1.3.2.7 TC_found_flag_notify - jako argument pobiera ¶cie¿ke do pliku dzwiêkowego
		który bêdzie wywo³ywany gdy zegar bêdzie osi±ga³ pe³n± godzinê (w trybie 
		normalnym), pe³n± minutê (stoper) oraz osi±gnie 00:00:00 w trybie timer
	
	1.3.2.8 TC_found_flag_language - jako argument mo¿e wystêpowaæ 'digital', 'bcd'
		lub 'binary' - ustawia sposób wy¶wietlania czasu na wy¶wietlaczu jako
		'jêzyk'
	
	1.3.2.9 TC_found_flag_color - funcja ustawia obecny kolor wy¶wietlacza. Przyjmuje
		albo jeden z podstawowych kolorów (blue, red, green, etc) lub kolory
		w kodzie heksadecymalnym RGB (np FFDD00)
	
	1.3.2.10 TC_check_flags - funckja ta sprawdza czy zadana flaga jest wolna (nie
		zosta³a ustawiona wcze¶niej co by wskazywa³o na zdublowane flagi, oraz
		czy zadana kombinacja flag jest mo¿liwa (prawid³owa)
		
    1.3.3: mod_output - jest to modu³ odpowiedzialny za wyprowadzanie danych na standardowe
		wyj¶cie programu. 
		
	1.3.3.1 TC_check_resolution - sprawdza aktualna maksymaln± rozdzielczo¶c terminala
		potrzebne w trakcie zmiany rozdzielczo¶ci w xtermie, b±dz framebuffera
		
	1.3.3.2 TC_draw_clock - rysuje zawarto¶æ bufora (w którym jest obecny czas) na ekran
		w zadanym jêzyku (wywo³uj±c odpowiedznie subprocedury
		
	1.3.3.3 TC_format_string - parsuje bufor do odpowiedzneij postaci bior±c pod uwagê
		aktualnie zadany jêzyk
	
	1.3.3.4 TC_check_bufor_length - sprawdza czy nale¿y zresetowaæ ekran w przypadku
		zmiany d³ugo¶ci stringa. Jest to potrzebne w kilku kluczowych momentach
		(np zmiana z -00:00:01 na 00:00:00)
		
	1.3.3.5 TC_debug - funckja wypisuje na stderr komunikaty debuguj±ce dzia³anie programu
	
    1.3.4: mod_curses - stanowi interfejs pomiêdzy programem a bibliotek± ncurses
		w razie zmiany biblioteki w przysz³o¶ci nale¿y zmodyfikowaæ tylko i wy³±cznie
		ten plik (a przynajmniej taka jest teoria)
    
	1.3.4.1 - clear_screen - czy¶ci ekran ( clear() )
	
	1.3.4.2 - draw_hline_inpos - rysuje liniê poziom± w zadanym miejscu
	
	1.3.4.3 - draw_vline_inpos - rysuje liniê pionow± w zadanym miejscu
	
	1.3.4.4 - draw_char_inpos - rysuje znak w zadanyjm miejscu
	
	1.3.4.5 - set_color_pair - definiuje parê kolorów. Ze wzglêdu na specyficzne zachowanie
		ncurses nie definiuje siê jednego koloru lecz ich parê.
	
	1.3.4.6 - init_curses - funkcja inicjuje ekran ncurses.
	
	1.3.4.7 - end_curses - funcja zamyka i czy¶ci pamiêæ oraz ekran ncurses.
	
    1.3.5: mod_time - 
    
    1.3.6: mod_colors - 
    
    1.3.7: languages - dodatkowe jêzyki wy¶wieltlania 
    
	1.3.7.1 lang_digital - bazowany na wy¶wietlaczu osiosegmentowym (8.) jêzyk
		pseudo-cyfrowy
    
	1.3.7.2 lang_bcd - jêzyk bazowany na BCD
    
	1.3.7.3 lang_binary - jêzyk bazowany na kodzie uzupe³nienowym U2
    
1.4 Graf zale¿no¶ci modu³ów

    [ main ]
       |
       +--[ mod_curses ]
       |
       +--[ mod_output ]
       |      |
       |      +--[ mod_time ]
       |      |
       |      +--[ mod_colors ]
       |
       +--[ mod_commandline ]
       |
       +--[ languages ]
              |
	      +--[ lang_digital ]
	      |
	      +--[ lang_bcd ]
	      |
	      +--[ lang_binary ]

1.5 Pseudokod

    zainicjuj_program
    {
	sprawdz_parametry
	{
	    while jest_nastêpny_argument
	    {
	        pobierz nastêpn± opcjê
		sprawdz czy opcja mo¿e byæ u¿yta
		sprawdz czy opcja ma prawid³owe argumenty
		ustaw flagi i parametry dla opcji
	    }
	}
	
	wlacz_ekran_ncurses;
	ustaw_kolory;
    }
    
    while (dzialaj) 
    {
	sprawdz_klawiaturê 
	{
	    czy_wywo³aæ menu?
	    czy_zminiæ opcjê?
	    wyczy¶æ ekran i przerysuj
	}
	sprawdz_rozdzielczosc(ekran);
	string_czasu=ustaw_string(jêzyk);
	rysuj_zegar(string_czasu);
	czekaj(interwa³)
    }
    
    wyczy¶æ_ekran;
    zakoñcz_program;	
	
    
-EOF-